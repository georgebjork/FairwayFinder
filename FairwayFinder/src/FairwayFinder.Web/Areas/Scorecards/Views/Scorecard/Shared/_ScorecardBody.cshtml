@model FairwayFinder.Core.Features.Scorecards.Models.ViewModels.ScorecardViewModel
@{
var front_nine_max = 9;
var back_nine_max = 18;
}
@*Yardage*@
<tr>
    <th colspan="2">@Model.RoundSummary.teebox_name</th>
    @for (var i = 0; i < front_nine_max; i++)
    {
        <td class="text-center">@Model.Holes[i].yardage</td>
    }
    <td class="text-center" colspan="2">@Model.RoundSummary.yardage_out</td>
    @for (var i = front_nine_max; i < back_nine_max; i++)
    {
        <td class="text-center">@Model.Holes[i].yardage</td>
    }
    <td class="text-center" colspan="2">@Model.RoundSummary.yardage_in</td>
    <td class="text-center" colspan="2">@Model.RoundSummary.yardage_total</td>
</tr>

@*Handicap*@
<tr>
    <th colspan="2">Handicap</th>
    @for (var i = 0; i < front_nine_max; i++)
    {
        <td class="text-center">@Model.Holes[i].handicap</td>
    }
    <td class="text-center" colspan="2">&nbsp;</td>
    @for (var i = front_nine_max; i < back_nine_max; i++)
    {
        <td class="text-center">@Model.Holes[i].handicap</td>
    }
    <td class="text-center" colspan="2">&nbsp;</td>
    <td class="text-center" colspan="2">@Model.RoundSummary.slope / @Model.RoundSummary.rating</td>
</tr>


@*Par*@
<tr>
    <th colspan="2">Par</th>
    @for (var i = 0; i < front_nine_max; i++)
    {
        <td class="text-center">@Model.Holes[i].par</td>
    }
    <td class="text-center" colspan="2">@Model.Holes.Where(x => x.hole_number <= front_nine_max).Sum(h => h.par)</td>
    @for (var i = front_nine_max; i < back_nine_max; i++)
    {
        <td class="text-center">@Model.Holes[i].par</td>
    }
    <td class="text-center" colspan="2">@Model.Holes.Where(x => x.hole_number > front_nine_max).Sum(h => h.par)</td>
    <td class="text-center" colspan="2">@Model.RoundSummary.par</td>
</tr>

@*Score*@
<tr>
    <th colspan="2">@Model.Name</th>
    @for (var i = 0; i < front_nine_max; i++)
    {
        <td class="text-center position-relative">
            <span>@Model.Holes[i].hole_score</span>
            @switch (Model.Holes[i].hole_score - Model.Holes[i].par)
            {
                case <= -2:
                    @await Html.PartialAsync("ScorecardStyling/_Eagle")
                    break;
                case -1:
                    @await Html.PartialAsync("ScorecardStyling/_Birdie")
                    break;
                case 1:
                    @await Html.PartialAsync("ScorecardStyling/_Bogey")
                    break;
                case >= 2:
                    @await Html.PartialAsync("ScorecardStyling/_DoubleBogey")
                    break;
            }
        </td>
    }
    <td class="text-center" colspan="2">@Model.RoundSummary.score_out</td>
    @for (var i = front_nine_max; i < back_nine_max; i++)
    {
        <td class="text-center position-relative">
            <span>@Model.Holes[i].hole_score</span>
            @switch (Model.Holes[i].hole_score - Model.Holes[i].par)
            {
                case <= -2:
                    @await Html.PartialAsync("ScorecardStyling/_Eagle")
                    break;
                case -1:
                    @await Html.PartialAsync("ScorecardStyling/_Birdie")
                    break;
                case 1:
                    @await Html.PartialAsync("ScorecardStyling/_Bogey")
                    break;
                case >= 2:
                    @await Html.PartialAsync("ScorecardStyling/_DoubleBogey")
                    break;
            }
        </td>
    }
    <td class="text-center" colspan="2">@Model.RoundSummary.score_in</td>
    <td class="text-center" colspan="2">@Model.RoundSummary.score</td>
</tr>
    @if (Model.RoundSummary.using_hole_stats)
    {
        <tr>
            <th colspan="2">Fairways</th>
            @for (var i = 0; i < front_nine_max; i++)
            {
                <td class="text-center">
                    @await Html.PartialAsync("Shared/_FairwayStatIcon", Model.HoleStats[i])
                </td>
            }
            <td class="text-center" colspan="2">@Model.HoleStats.Where(x => x.hole_number <= front_nine_max).Count(x => x.hit_fairway == true)</td>
            @for (var i = front_nine_max; i < back_nine_max; i++)
            {
                <td class="text-center">
                    @await Html.PartialAsync("Shared/_FairwayStatIcon", Model.HoleStats[i])
                </td>
            }
            <td class="text-center" colspan="2">@Model.HoleStats.Where(x => x.hole_number > front_nine_max).Count(x => x.hit_fairway == true)</td>
            <td class="text-center" colspan="2">@Model.HoleStats.Count(x => x.hit_fairway == true) / @Model.Holes.Count(x => x.par > 3)</td>
        </tr>
        <tr>
            <th colspan="2">GIR</th>
            @for (var i = 0; i < front_nine_max; i++)
            {
                <td class="text-center">
                    @await Html.PartialAsync("Shared/_GreenStatIcon", Model.HoleStats[i])
                </td>
            }
            <td class="text-center" colspan="2">@Model.HoleStats.Where(x => x.hole_number <= front_nine_max).Count(x => x.hit_green == true)</td>
            @for (var i = front_nine_max; i < back_nine_max; i++)
            {
                <td class="text-center">
                    @await Html.PartialAsync("Shared/_GreenStatIcon", Model.HoleStats[i])
                </td>
            }
            <td class="text-center" colspan="2">@Model.HoleStats.Where(x => x.hole_number > front_nine_max).Count(x => x.hit_green == true)</td>
            <td class="text-center" colspan="2">@Model.HoleStats.Count(x => x.hit_green == true) / @Model.HoleStats.Count</td>
        </tr>
        <tr>
            <th colspan="2">Putts</th>
            @for (var i = 0; i < front_nine_max; i++)
            {
                if (Model.HoleStats[i].number_of_putts >= 3)
                {
                    <td class="text-center text-danger">@Model.HoleStats[i].number_of_putts</td>
                }
                else
                {
                    <td class="text-center">@Model.HoleStats[i].number_of_putts</td>
                }
            }
            <td class="text-center" colspan="2">@Model.HoleStats.Where(x => x.hole_number <= 9).Sum(x => x.number_of_putts)</td>
            @for (var i = front_nine_max; i < back_nine_max; i++)
            {
                if (Model.HoleStats[i].number_of_putts >= 3)
                {
                    <td class="text-center text-danger">@Model.HoleStats[i].number_of_putts</td>
                }
                else
                {
                    <td class="text-center">@Model.HoleStats[i].number_of_putts</td>
                }
            }
            <td class="text-center" colspan="2">@Model.HoleStats.Where(x => x.hole_number > 9).Sum(x => x.number_of_putts)</td>
            <td class="text-center" colspan="2">@Model.HoleStats.Sum(x => x.number_of_putts)</td>
        </tr>
    }