@using FairwayFinder.Web.Controllers

<script type="text/javascript">


    document.addEventListener("DOMContentLoaded", function() {
        console.log("Initial page load - Setting up chart.");
        initializeChart(); 
    });

    // Listen for HTMX content replacement (when the chart's container is swapped)
    document.body.addEventListener("@HtmxTriggers.RenderChart", function(event) {

        if (document.getElementById("scoresChart")) {
            console.log("Reinitializing Chart...");
            initializeChart();
        }
    });

    // Function to initialize Chart.js
    function initializeChart() {
        let chartStatus = Chart.getChart("scoresChart");
        if (chartStatus !== undefined) {
            chartStatus.destroy();
        }

        const ctxLine = document.getElementById('scoresChart').getContext('2d');

        let dates = []
        let scores = []

        // Line Chart configuration
        const lineData = {
            labels: dates,
            datasets: [{
                label: '18 Hole Scores',
                data: scores,
                borderWidth: 2,
            }]
        };

        const lineChart = new Chart(ctxLine, {
            type: 'line',
            data: lineData,
            plugins: [ChartDataLabels],
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1,
                        },
                    },
                },
                plugins: {
                    decimation: {
                        enabled: true,
                        algorithm: 'min-max',
                        samples: 100
                    },
                    datalabels: {
                        color: '#fff', // White text for contrast
                        backgroundColor: 'rgba(0, 123, 255, 0.8)', // Semi-transparent blue background
                        borderRadius: 6,
                        padding: 6,
                        font: {
                            size: 12,
                            weight: 'bold',
                            family: 'Arial'
                        },
                        align: 'center', // Position the label above the point
                        anchor: 'center', // Keeps it near the data point
                        formatter: (value, context) => {
                            return value; // Ensures only the value is displayed
                        },
                        display: function(context) {
                            return context.dataset.data[context.dataIndex] !== null; // Hide null values
                        }
                    }
                }
            }
        });



        // Listen for chart re-render event from HTMX
        document.body.addEventListener("@HtmxTriggers.RenderChartData", function(evt) {

            console.log(evt.detail.dates)
            console.log(evt.detail.scores)
            console.log(evt.detail)

            lineChart.update();

            if (evt.detail && evt.detail.dates && evt.detail.scores) {
                lineChart.data.labels = evt.detail.dates; // Update the labels
                lineChart.data.datasets[0].data = evt.detail.scores; // Update the dataset values
                lineChart.update(); // Re-render the chart
            }
        });
    }
</script>

 
        
        